function CanvasShapes(canvasID,defaults){this.canvasId=canvasID;this.canvas=document.getElementById(this.canvasId);this.context=this.canvas.getContext("2d");this.version=function(){return"0.1";};this.setLineWidth=function(width){this.lineWidth=width;this.context.lineWidth=this.lineWidth;};this.getLineWidth=function(){return this.lineWidth;};this.setLineColor=function(color){if(color.substr(0,1)!=="#"){this.lineColor="#"+color;}else{this.lineColor=color;}this.context.strokeStyle=this.lineColor;};this.getLineColor=function(){return this.lineColor;};this.setFillColor=function(color){if(color.substr(0,1)!=="#"){this.fillColor="#"+color;}else{this.fillColor=color;}this.context.fillStyle=this.fillColor;};this.getFillColor=function(){return this.fillColor;};this.setLinesAndFill=function(lineWidth,lineColor,fillColor){this.setLineWidth(lineWidth);this.setLineColor(lineColor);this.setFillColor(fillColor);};this.clear=function(){this.canvas.width=this.canvas.width;};this.square=function(sideLength,leftPosition,topPosition){this.rectangle(sideLength,sideLength,leftPosition,topPosition);};this.rectangle=function(width,height,leftPosition,topPosition){this.context.beginPath();this.context.rect(leftPosition,topPosition,width,height);this.drawShape();};this.circle=function(radius,centreLeft,centreTop){this.context.beginPath();this.context.arc(centreLeft,centreTop,radius,0,2*Math.PI,false);this.drawShape();};this.rightAngletriangle=function(width,height,leftPosition,topPosition,rightToLeft){this.context.beginPath();this.context.moveTo(leftPosition,topPosition);if(rightToLeft!==undefined&&rightToLeft===true){this.context.lineTo(parseInt(leftPosition)-parseInt(width),topPosition);}else{this.context.lineTo(parseInt(leftPosition)+parseInt(width),topPosition);}this.context.lineTo(leftPosition,parseInt(topPosition)-parseInt(height));this.context.lineTo(leftPosition,topPosition);this.drawShape();};this.equilateralTriangle=function(length,leftPosition,topPosition){this.context.beginPath();this.context.moveTo(leftPosition,topPosition);var opposite=length/2;var adjacentSquare=(length*length)-(opposite*opposite);var adjacent=Math.sqrt(adjacentSquare);this.context.lineTo(leftPosition+opposite,topPosition+adjacent);this.context.lineTo(leftPosition-opposite,topPosition+adjacent);this.context.lineTo(leftPosition,topPosition);this.drawShape();};this.drawShape=function(){this.context.fill();if(this.lineWidth>0){this.context.stroke();}};if(defaults!==undefined){if(defaults.lineWidth!==undefined){this.setLineWidth(defaults.lineWidth);}else{this.setLineWidth(1);}if(defaults.lineColor!==undefined){this.setLineColor(defaults.lineColor);}else{this.setLineColor("#000");}if(defaults.fillColor!==undefined){this.setFillColor(defaults.fillColor);}else{this.setFillColor("#fff");}}else{this.setLineWidth(1);this.setLineColor("#000");this.setFillColor("#fff");}}